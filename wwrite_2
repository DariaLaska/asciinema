import socket, threading
from typing import Any


class DariasWriter:
    def __init__(self, address):
        self.server = None
        self.clients = []
        self.address = address
        self.all_msg = b''

    def _accept_clients(self):
        while True:
            conn, address = self.server.accept()
            conn.sendall(self.all_msg)
            self.clients.append(conn)


    def __enter__(self):
        self.server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.server.bind(self.address)
        self.server.listen()

        thread = threading.Thread(target=self._accept_clients, args=())
        thread.start()


    def write_stdin(self, ts: float, data: Any):
        pass

    def write_stdout(self, ts: float, data: Any):
        self.all_msg += data
        for i in self.clients:
            i.sendall(data)

    def __exit__(self, exc_type: str, exc_value: str, exc_traceback: str):
        #закрыть поток
        socket.close()


if __name__ == '__main__':
    IP = "127.0.0.1"
    port = 5566
    addr = (IP, port)
    writer = DariasWriter(addr)
    with writer:
        while True:
            msg = input()
            ts = 0.1
            writer.write_stdout(ts, msg.encode('utf-8'))

